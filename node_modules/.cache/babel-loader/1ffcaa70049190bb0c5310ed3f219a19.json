{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\sandr\\\\OneDrive\\\\Desktop\\\\bookstore\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addBook = book => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    //make call to database\n    const firestore = getFirestore();\n    firestore.collection('books').add(_objectSpread({}, book));\n    dispatch({\n      type: 'ADD_NEW_BOOK',\n      book: book\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\sandr\\OneDrive\\Desktop\\bookstore\\src\\store\\actions\\bookActions.js"],"names":["addBook","book","dispatch","getState","getFirebase","getFirestore","firestore","collection","add","type"],"mappings":";;;;;;AAAA,OAAO,MAAMA,OAAO,GAAIC,IAAD,IAAU;AAC7B,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAArB,KAAuD;AAC1D;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,mBACOP,IADP;AAIAC,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAE,cADD;AAELR,MAAAA,IAAI,EAAEA;AAFD,KAAD,CAAR;AAIH,GAXD;AAYH,CAbM","sourcesContent":["export const addBook = (book) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make call to database\r\n        const firestore = getFirestore()\r\n        firestore.collection('books').add({\r\n            ...book, \r\n            \r\n        })\r\n        dispatch({\r\n            type: 'ADD_NEW_BOOK',\r\n            book: book\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}